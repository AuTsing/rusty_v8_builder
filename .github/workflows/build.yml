name: Build

on: [push]

jobs:
    build:
        runs-on: ubuntu-22.04

        env:
            V8_FROM_SOURCE: 1
            TARGET: aarch64-linux-android
            VARIANT: release
            CARGO_VARIANT_FLAG: --release

        steps:
            - name: Checkout To Self Repo
              uses: actions/checkout@v4

            - name: Get Version
              id: get_version
              run: |
                  version=$(cat ./README.md | grep -oP 'v\d+\.\d+\.\d+')
                  echo "version=$version" >> $GITHUB_OUTPUT

            - name: Checkout To V8 Repo
              uses: actions/checkout@v4
              with:
                  repository: denoland/rusty_v8
                  ref: ${{ steps.get_version.outputs.version }}
                  fetch-depth: 10
                  submodules: recursive

            - name: Install Rust
              uses: dsherret/rust-toolchain-file@v1

            - name: Install Python
              uses: actions/setup-python@v4
              with:
                  python-version: 3.11.x
                  architecture: x64

            - name: Install Cross Compilation Toolchain
              run: |
                  rustup target add aarch64-linux-android

            - name: Write git_submodule_status.txt
              run: git submodule status --recursive > git_submodule_status.txt

            - name: Cache
              uses: actions/cache@v3
              with:
                  path: |-
                      target/sccache
                      target/*/.*
                      target/*/build
                      target/*/deps
                  key: cargo-${{ env.TARGET  }}-${{ env.VARIANT }}-${{ hashFiles('Cargo.lock', 'build.rs', 'git_submodule_status.txt') }}
                  restore-keys: cargo-${{ env.TARGET  }}-${{ env.VARIANT }}-

            - name: Build
              run: cargo build -vv --locked ${{ env.CARGO_VARIANT_FLAG }} --target ${{ env.TARGET }}
