name: Build

on:
    push:
        tags: ["**"]

jobs:
    build:
        runs-on: ubuntu-22.04

        env:
            V8_FROM_SOURCE: 1
            TARGET: x86_64-unknown-linux-gnu
            VARIANT: release
            CARGO_VARIANT_FLAG: --release
            LIB_NAME: librusty_v8
            LIB_EXT: a

        steps:
            - name: Checkout To Self Repo
              uses: actions/checkout@v4

            - name: Get Version
              id: get_version
              run: |
                  version=$(cat ./README.md | grep -oP 'v\d+\.\d+\.\d+')
                  echo "version=$version" >> $GITHUB_OUTPUT

            - name: Checkout To V8 Repo
              uses: actions/checkout@v4
              with:
                  repository: denoland/rusty_v8
                  ref: ${{ steps.get_version.outputs.version }}
                  fetch-depth: 10
                  submodules: recursive

            - name: Install Rust
              uses: dsherret/rust-toolchain-file@v1

            - name: Install Python
              uses: actions/setup-python@v4
              with:
                  python-version: 3.11.x
                  architecture: x64

            - name: Install Cross Compilation Toolchain
              run: |
                  rustup target add aarch64-linux-android

            - name: Write git_submodule_status.txt
              run: git submodule status --recursive > git_submodule_status.txt

            - name: Cache
              uses: actions/cache@v3
              with:
                  path: |-
                      target/sccache
                      target/*/.*
                      target/*/build
                      target/*/deps
                  key: cargo-${{ env.TARGET  }}-${{ env.VARIANT }}-${{ hashFiles('Cargo.lock', 'build.rs', 'git_submodule_status.txt') }}
                  restore-keys: cargo-${{ env.TARGET  }}-${{ env.VARIANT }}-

            - name: Sccache
              shell: pwsh
              env:
                  SCCACHE_DIR: ${{ github.workspace }}/target/sccache
                  SCCACHE_CACHE_SIZE: 128M
                  SCCACHE_IDLE_TIMEOUT: 0
              run: |
                  $version = "0.2.12"
                  $platform =
                    @{ "macOS"   = "x86_64-apple-darwin"
                       "Linux"   = "x86_64-unknown-linux-musl"
                       "Windows" = "x86_64-pc-windows-msvc"
                     }.${{ runner.os }}
                  $basename = "sccache-$version-$platform"
                  $url = "https://github.com/mozilla/sccache/releases/download/" +
                         "$version/$basename.tar.gz"
                  cd ~
                  curl -LO $url
                  tar -xzvf "$basename.tar.gz"
                  . $basename/sccache --start-server
                  echo "$(pwd)/$basename" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

            - name: Build
              run: cargo build -vv --locked ${{ env.CARGO_VARIANT_FLAG }} --target ${{ env.TARGET }}

            - name: Prepare Release
              run: cp
                  target/${{ env.TARGET }}/${{ env.VARIANT }}/gn_out/obj/${{ env.LIB_NAME }}.${{ env.LIB_EXT }}
                  target/${{ env.LIB_NAME }}_${{ env.VARIANT }}_${{ env.TARGET }}.${{ env.LIB_EXT }}

            - name: Release
              uses: softprops/action-gh-release@v2
              if: startsWith(github.ref, 'refs/tags/')
              with:
                  files: target/${{ env.LIB_NAME }}_${{ env.VARIANT }}_${{ env.TARGET }}.${{ env.LIB_EXT }}
